# =================
# SDL for root types
# =================

extend type Query {
  requestPasswordResetEmail(email: String!): RequestPasswordResetEmailResult!
  user(id: String, username: String, email: String): UserResult!
}

extend type Mutation {
  signup(data: CreateUserInput!): SignupResult!
  signupWithExternalProvider(
    username: String!
  ): SignupWithExternalProviderResult!
  login(username: String!, password: String!): LoginResult!
  loginWithExternalProvider: LoginWithExternalProviderResult!
  resetPassword(data: ResetPasswordInput!): ResetPasswordResult!
  deleteAllUsers: DeleteAllUsersResult!
}

# =================
# User-related SDL
# =================

type User @key(fields: "id") {
  id: ID!
  picture: String
  provider: AccountProvider!
  username: String!
  email: String!
  name: String!
  password: String!
  role: UserRole!
  lastPasswordChange: String
}

enum UserRole {
  USER
  ADMIN
}

enum AccountProvider {
  GOOGLE
  NONE
}

# =================
# Auth-related SDL:
# types which will be used as the result to queries by using them in unions
# =================

type TakenUsernameOrEmail {
  message: String!
}

type InvalidDataFormat {
  message: String!
}

type SuccessfulSignup {
  user: User!
  csrfToken: String!
}

type SuccessfulLogin {
  user: User!
  csrfToken: String!
}

type InvalidCredentials {
  message: String!
}

type InvalidOrMissingUserIdentifier {
  message: String!
}

type InvalidOrExpiredToken {
  message: String!
}

type PasswordsDontMatch {
  message: String!
}

type UserNotFound {
  message: String!
}

type EmailMayHaveBeenSent {
  message: String!
}

type SkippedOAuthFlow {
  message: String!
}

type NotInTestingEnvironment {
  message: String!
}

type SuccessfulRemoval {
  count: Int!
}

type WantsSamePassword {
  message: String!
}

# Unions which combine the previous types.
# This is a better approach for error handling than just throwing errors.
# The GraphQL Twitter representative talks about this in the following link
# https://medium.com/@sachee/200-ok-error-handling-in-graphql-7ec869aec9bc

union DeleteAllUsersResult = NotInTestingEnvironment | SuccessfulRemoval

union UserResult = User | UserNotFound | InvalidDataFormat

union RequestPasswordResetEmailResult = EmailMayHaveBeenSent | InvalidDataFormat

union ResetPasswordResult =
    User
  | InvalidOrExpiredToken
  | PasswordsDontMatch
  | WantsSamePassword
  | InvalidDataFormat

union LoginWithExternalProviderResult =
    SuccessfulLogin
  | InvalidOrMissingUserIdentifier
  | SkippedOAuthFlow

union SignupResult = SuccessfulSignup | InvalidDataFormat | TakenUsernameOrEmail

union SignupWithExternalProviderResult =
    SuccessfulSignup
  | InvalidDataFormat
  | TakenUsernameOrEmail
  | SkippedOAuthFlow
  | InvalidOrExpiredToken

union LoginResult = SuccessfulLogin | InvalidDataFormat | InvalidCredentials

# =================
# SDL for input types used for this service's queries/mutations
# =================

input ResetPasswordInput {
  currentPassword: String!
  newPassword: String!
  token: String!
}

input CreateUserInput {
  picture: String
  username: String!
  email: String!
  name: String!
  password: String!
}
