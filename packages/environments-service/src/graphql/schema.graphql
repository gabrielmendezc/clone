extend type Query {
  getEnvironments: [Environment]
}

extend type Mutation {
  createEnvironment(data: CreateEnvironmentInput): Environment
}

type Environment @key(fields: "id") {
  id: ID!
  name: String!
  owner: User!
  members: [EnvironmentMember]
}

type EnvironmentMember @key(fields: "id") {
  id: ID!
  environment: Environment
  environmentRole: EnvironmentRole
  user: User!
}

input CreateEnvironmentInput {
  name: String!
  userCreatingEnvironmentId: ID!
}

enum EnvironmentRole {
  ADMIN
  CONTRIBUTOR
}

extend type User @key(fields: "id") {
  id: ID! @external
  environments: [Environment]
}
