version: '3.7'
services:
  nginx:
    restart: always
    build:
      context: ./packages/nginx
      dockerfile: Dockerfile.dev
    ports:
      - '8080:80'
  auth-service:
    build:
      context: ./packages/auth-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/auth-service:/auth-service
    ports:
      - '5000:5000'
    env_file:
      - ./packages/auth-service/development.env
    environment:
      - NODE_ENV=development
  chat-service:
    build:
      context: ./packages/chat-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/chat-service:/chat-service
    ports:
      - '5001:5001'
    env_file:
      - ./packages/chat-service/development.env
    environment:
      - NODE_ENV=development
  logging-service:
    build:
      context: ./packages/logging-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/logging-service:/logging-service
    ports:
      - '5002:5002'
    env_file:
      - ./packages/logging-service/development.env
    environment:
      - NODE_ENV=development
  search-engine-service:
    build:
      context: ./packages/search-engine-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/search-engine-service:/search-engine-service
    ports:
      - '5004:5004'
    env_file:
      - ./packages/search-engine-service/development.env
    environment:
      - NODE_ENV=development
  users-service:
    build:
      context: ./packages/users-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/users-service:/users-service
    ports:
      - '5005:5005'
    env_file:
      - ./packages/users-service/development.env
    environment:
      - NODE_ENV=test
  api-gateway:
    build:
      context: ./packages/api-gateway
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/api-gateway:/api-gateway
    ports:
      - '7000:7000'
    env_file:
      - ./packages/api-gateway/development.env
    environment:
      - NODE_ENV=development
    restart: on-failure
  client:
    restart: always
    build:
      context: ./packages/client
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/client:/app
    ports:
      - '3000:3000'
  mongo-service:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: V6>'?a5aspGa{
    ports:
      - '27017:27017'
    restart: always
  postgres-service:
    image: postgres:11.6-alpine
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - ./postgres.env
  redis-service:
    image: redis
    restart: always
    ports:
      - '6379:6379'
  testable-postgres-service:
    image: postgres:11.6-alpine
    restart: always
    ports:
      - '5434:5432'
    env_file:
      - ./testable-postgres.env
