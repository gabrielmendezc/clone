version: '3.7'
services:
  dev-nginx:
    restart: always
    build:
      context: ./packages/nginx/dev
      dockerfile: Dockerfile.dev
    ports:
      - '8080:80'
  dev-accounts-service:
    build:
      context: ./packages/accounts-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/accounts-service:/dev-accounts-service
    ports:
      - '5000:5000'
    env_file:
      - ./packages/accounts-service/development.env
    environment:
      - NODE_ENV=development
  dev-environments-service:
    build:
      context: ./packages/environments-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/environments-service:/dev-environments-service
    ports:
      - '5001:5001'
    env_file:
      - ./packages/environments-service/development.env
    environment:
      - NODE_ENV=development
  dev-api-gateway:
    build:
      context: ./packages/api-gateway
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/api-gateway:/dev-api-gateway
    ports:
      - '7000:7000'
    env_file:
      - ./packages/api-gateway/development.env
    environment:
      - NODE_ENV=development
    restart: on-failure
  dev-client:
    restart: always
    build:
      context: ./packages/client
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/client:/dev-app
    ports:
      - '3000:3000'
    environment:
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
  dev-postgres-service:
    image: postgres:11.6-alpine
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - ./postgres.env
  dev-redis-service:
    image: redis
    restart: always
    ports:
      - '6379:6379'
